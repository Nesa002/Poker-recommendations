package rules.forward

import com.ftn.sbnz.model.models.Round;
import com.ftn.sbnz.service.services.HandService;
import com.ftn.sbnz.service.services.HandEvalQueryService;

global HandEvalQueryService handEvalService;
global HandService handService;
global Double min_bigger_raise;        
global Integer min_bigger_raise_blinds;   
global Integer bad_position_treshold;

rule "High Stakes Strong Hand"
activation-group "high_stakes"
salience 10
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Premium"))
then
    System.out.println("Action: RAISE (High stake, premium hand)");
end

rule "High Stakes Good Position Economy"
activation-group "high_stakes"
salience 9
when
    $r: Round()

    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval($r.getPlayerPosition() > bad_position_treshold)
    eval(($r.getStrongEconomy() || handService.isTableAggressive() && handEvalService.isHandAtLeast($r.getHand(), "Medium")) || handEvalService.isHandAtLeast($r.getHand(), "Strong"))
then
    System.out.println("Action: RAISE (High stake, good position, strong hand/economy)");
end

rule "High Stakes Bad Position"
activation-group "high_stakes"
salience 8
when
    $r: Round()
    
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval($r.getPlayerPosition() <= bad_position_treshold)
    eval($r.getStrongEconomy() && handEvalService.isHandAtLeast($r.getHand(), "Strong"))
then
    System.out.println("Action: RAISE (High stake, bad position, strong hand/economy)");
end

rule "High Stakes Call Fallback"
activation-group "high_stakes"
salience -10
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
then
    System.out.println("Action: CALL (High stakes fallback)");
end

// ================= Normal Stakes Raise =================

rule "Normal Stakes Strong Hand"
activation-group "normal_stakes"
salience 10
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Premium"))
then
    System.out.println("Action: RAISE (Normal stake, premium hand)");
end

rule "Normal Stakes Good Position Economy"
activation-group "normal_stakes"
salience 9
when
    $r: Round()

    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval($r.getPlayerPosition() > bad_position_treshold)
    eval(($r.getStrongEconomy() || handService.isTableAggressive() && handEvalService.isHandAtLeast($r.getHand(), "Playable")) || handEvalService.isHandAtLeast($r.getHand(), "Medium"))
then
    System.out.println("Action: RAISE (Normal stake, good position, medium hand/economy or strong hand)");
end

rule "Normal Stakes Bad Position"
activation-group "normal_stakes"
salience 8
when
    $r: Round()
    
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval($r.getPlayerPosition() <= bad_position_treshold)
    eval(($r.getStrongEconomy() && handEvalService.isHandAtLeast($r.getHand(), "Medium")) || handEvalService.isHandAtLeast($r.getHand(), "Strong"))
then
    System.out.println("Action: RAISE (Normal stake, bad position, playable hand/economy or medium hand)");
end

rule "Normal Stakes Call Fallback"
activation-group "normal_stakes"
salience -10
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
then
    System.out.println("Action: CALL (Normal stakes fallback)");
end