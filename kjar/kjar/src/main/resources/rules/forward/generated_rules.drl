package rules.forward

import com.ftn.sbnz.model.models.Round;
import com.ftn.sbnz.service.services.HandService;
import com.ftn.sbnz.service.services.HandEvalQueryService;

global HandEvalQueryService handEvalService;
global HandService handService;
global Double min_bigger_raise;
global Integer min_bigger_raise_blinds;
global Integer bad_position_treshold;


rule "HighStakesPremiumHand"
activation-group "high_stakes"
salience 10
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Premium"))
    
    
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (High stake, premium hand)");
end

rule "HighStakesGoodPositionStrongHand"
activation-group "high_stakes"
salience 9
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Strong"))
    eval($r.getPlayerPosition() > bad_position_treshold)
    
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (High stake, good position, strong hand)");
end

rule "HighStakesGoodPositionMediumHandEconomy"
activation-group "high_stakes"
salience 8
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Medium"))
    eval($r.getPlayerPosition() > bad_position_treshold)
    eval($r.getStrongEconomy())
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (High stake, good position, medium hand with strong economy)");
end

rule "HighStakesGoodPositionMediumHandAggTable"
activation-group "high_stakes"
salience 7
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Medium"))
    eval($r.getPlayerPosition() > bad_position_treshold)
    
    eval(handService.isTableAggressive())
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (High stake, good position, medium hand with aggressive table)");
end

rule "HighStakesBadPosition"
activation-group "high_stakes"
salience 6
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Strong"))
    eval($r.getPlayerPosition() <= bad_position_treshold)
    eval($r.getStrongEconomy())
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (High stake, bad position, strong hand/economy)");
end

rule "HighStakesCallFallback"
activation-group "high_stakes"
salience -10
when
    $r: Round()
    eval($r.getCurrentRaise() > (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() >= min_bigger_raise_blinds)
    
    
    
    
then
    $r.setSuggestedAction("CALL");
    System.out.println("Action: CALL (High stakes fallback)");
end

rule "NormalStakesPremiumHand"
activation-group "normal_stakes"
salience 10
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Premium"))
    
    
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, premium hand)");
end

rule "NormalStakesGoodPositionEconomy"
activation-group "normal_stakes"
salience 9
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    
    eval($r.getPlayerPosition() > bad_position_treshold)
    eval($r.getStrongEconomy())
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, good position, strong economy)");
end

rule "NormalStakesGoodPositionAggTablePlayable"
activation-group "normal_stakes"
salience 8
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Playable"))
    eval($r.getPlayerPosition() > bad_position_treshold)
    
    eval(handService.isTableAggressive())
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, good position, aggressive table with playable hand)");
end

rule "NormalStakesGoodPositionMediumHand"
activation-group "normal_stakes"
salience 7
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Medium"))
    eval($r.getPlayerPosition() > bad_position_treshold)
    
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, good position, medium hand)");
end

rule "NormalStakesBadPositionMediumHandEconomy"
activation-group "normal_stakes"
salience 6
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Medium"))
    eval($r.getPlayerPosition() <= bad_position_treshold)
    eval($r.getStrongEconomy())
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, bad position, strong economy with medium hand)");
end

rule "NormalStakesBadPositionStrongHand"
activation-group "normal_stakes"
salience 5
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    eval(handEvalService.isHandAtLeast($r.getHand(), "Strong"))
    eval($r.getPlayerPosition() <= bad_position_treshold)
    
    
then
    $r.setSuggestedAction("RAISE");
    System.out.println("Action: RAISE (Normal stake, bad position, strong hand)");
end

rule "NormalStakesCallFallback"
activation-group "normal_stakes"
salience -10
when
    $r: Round()
    eval($r.getCurrentRaise() <= (min_bigger_raise * $r.getPot()) && $r.getCurrentRaise() < min_bigger_raise_blinds)
    
    
    
    
then
    $r.setSuggestedAction("CALL");
    System.out.println("Action: CALL (Normal stakes fallback)");
end


